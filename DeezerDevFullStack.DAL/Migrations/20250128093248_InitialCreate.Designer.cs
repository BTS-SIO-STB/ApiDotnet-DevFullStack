// <auto-generated />
using System;
using DeezerDevFullStack.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeezerDevFullStack.DAL.Migrations
{
    [DbContext(typeof(DeezerDbContext))]
    [Migration("20250128093248_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeezerDevFullStack.DTO.Artist", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("DeezerDevFullStack.DTO.Playlist", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("SavedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Name");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("DeezerDevFullStack.DTO.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SongUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("PlaylistName");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("DeezerDevFullStack.DTO.Song", b =>
                {
                    b.HasOne("DeezerDevFullStack.DTO.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeezerDevFullStack.DTO.Playlist", null)
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistName")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("DeezerDevFullStack.DTO.Artist", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("DeezerDevFullStack.DTO.Playlist", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
